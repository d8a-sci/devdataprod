arrange(sum.goods,desc(amount))
arrange(sum.people,desc(amount))
summarise(gb, amount=sum(property.damage+crop.damage)) %>% top_n(10,amount
)
summarise(gb, amount=sum(property.damage+crop.damage)) %>% top_n(10,amount)
summarise(gb, amount=sum(property.damage+crop.damage)) %>% top_n(10,amount) %>% arrange(desc(amount))
cf1
gb
sum.injuries %>% arrange(desc(amount)) %>% top_n(top.n,amount)
source('~/.active-rstudio-document', echo=TRUE)
# Get libraries
library(lubridate,		quietly = TRUE, warn.conflicts=FALSE)
library(qdapTools,		quietly = TRUE, warn.conflicts=FALSE)
library(dplyr,			quietly = TRUE, warn.conflicts=FALSE)
library(reshape2,		quietly = TRUE, warn.conflicts=FALSE)
library(data.table,		quietly = TRUE, warn.conflicts=FALSE)
library(xtable,        	quietly = TRUE, warn.conflicts=FALSE)
library(ggplot2,		quietly = TRUE, warn.conflicts=FALSE)
library(RColorBrewer,	quietly = TRUE, warn.conflicts=FALSE)
library(tidyr,			quietly = TRUE, warn.conflicts=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library("UsingR", lib.loc="~/Library/R/3.1/library")
library("manipulate", lib.loc="~/Library/R/3.1/library")
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
library("knitr", lib.loc="~/Library/R/3.1/library")
library("knitcitations", lib.loc="~/Library/R/3.1/library")
library("markdown", lib.loc="~/Library/R/3.1/library")
library("lubridate", lib.loc="~/Library/R/3.1/library")
library("rmarkdown", lib.loc="~/Library/R/3.1/library")
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
hist(galton$child,col="blue",breaks=100)
meanChild <- mean(galton$child)
lines(rep(meanChild,100),seq(0,150,length=100),col="red",lwd=5)
plot(galton$parent,galton$child,pch=19,col="blue")
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent", ylab = "child")
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = galton)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .05 * freqData$freq,
xlab = "parent", ylab = "child")
lm1 <- lm(galton$child ~ galton$parent)
lines(galton$parent,lm1$fitted,col="red",lwd=3)
6
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
myPlot <- function(beta){
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .15 * freqData$freq,
xlab = "parent",
ylab = "child"
)
abline(0, beta, lwd = 3)
points(0, 0, cex = 2, pch = 19)
mse <- mean( (y - beta * x)^2 )
title(paste("beta = ", beta, "mse = ", round(mse, 3)))
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
y <- galton$child
x <- galton$parent
beta1 <- cor(y, x) *  sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
rbind(c(beta0, beta1), coef(lm(y ~ x)))
beta1 <- cor(y, x) *  sd(x) / sd(y)
beta0 <- mean(x) - beta1 * mean(y)
rbind(c(beta0, beta1), coef(lm(x ~ y)))
cor(y, x) *  sd(x) / sd(y)
cor(y, x) *  sd(y) / sd(x)
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(y ~ x))[2])
yn <- (y - mean(y))/sd(y)
xn <- (x - mean(x))/sd(x)
c(cor(y, x), cor(yn, xn), coef(lm(yn ~ xn))[2])
beta1
beta2
beta0
y <- galton$child
x <- galton$parent
beta1 <- cor(y, x) *  sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
rbind(c(beta0, beta1), coef(lm(y ~ x)))
y
x
beta0
beta1
coef(lm(y~x))
(lm(y~x))
cor(y,x)
cor(x,y)
sd(x)
sd(y)
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc ^ 2)
c(beta1, coef(lm(y ~ x))[2])
yn <- (y - mean(y))/sd(y)
xn <- (x - mean(x))/sd(x)
c(cor(y, x), cor(yn, xn), coef(lm(yn ~ xn))[2])
sd(xn)
x<-rnorm(10)
x
odr(x)
order(x)
# make this an external chunk that can be included in any file
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
library(UsingR)
data(father.son)
y <- (father.son$sheight - mean(father.son$sheight)) / sd(father.son$sheight)
x <- (father.son$fheight - mean(father.son$fheight)) / sd(father.son$fheight)
rho <- cor(x, y)
myPlot <- function(x, y) {
plot(x, y,
xlab = "Father's height, normalized",
ylab = "Son's height, normalized",
xlim = c(-3, 3), ylim = c(-3, 3),
bg = "lightblue", col = "black", cex = 1.1, pch = 21,
frame = FALSE)
}
View(father.son)
View(father.son)
o
myPlot(x, y)
abline(0, 1) # if there were perfect correlation
abline(0, rho, lwd = 2) # father predicts son
abline(0, 1 / rho, lwd = 2) # son predicts father, son on vertical axis
abline(h = 0); abline(v = 0) # reference lines for no relathionship
```
c(0.725, 0.429, -0.372, 0.863)
v=c(0.725, 0.429, -0.372, 0.863)
mean(v)
sd(v)
vbar<-mean(v)
v - vbar
(v - vbar)^2
sum((v - vbar)^2)
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour\
= "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
myHist <- function(mu){
mse <- mean((galton$child - mu)^2)
g <- ggplot(galton, aes(x = child)) + geom_histogram(fill = "salmon", colour= "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
myHist <- function(mu){
mse <- mean((v - mu)^2)
g <- ggplot(v) + geom_histogram(fill = "salmon", colour= "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
manipulate(myHist(mu))
manipulate(myHist(mu), mu = slider(-1, 1, step = 0.25))
View(galton)
View(galton)
type(galton)
class(galton)
data.frame(v)
myHist <- function(mu){
mse <- mean((v - mu)^2)
g <- ggplot(data.frame(v),aes() + geom_histogram(fill = "salmon", colour= "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
vdf=data.fram(v)
vdf=data.frame(v)
vdf
myHist <- function(mu){
mse <- mean((v - mu)^2)
g <- ggplot(vdf,aes(x=v) + geom_histogram(fill = "salmon", colour= "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
myHist <- function(mu){
mse <- mean((v - mu)^2)
g <- ggplot(vdf,aes(x=v)) + geom_histogram(fill = "salmon", colour= "black", binwidth=1)
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(-1, 1, step = 0.25))
manipulate(myHist(mu), mu = slider(-1, 1, step = 0.05))
vdf
myHist <- function(mu){
mse <- mean((v - mu)^2)
g <- ggplot(vdf,aes(x=v)) + geom_histogram(fill = "salmon", colour= "black")
g <- g + geom_vline(xintercept = mu, size = 3)
g <- g + ggtitle(paste("mu = ", mu, ", MSE = ", round(mse, 2), sep = ""))
g
}
manipulate(myHist(mu), mu = slider(-1, 1, step = 0.05))
(v - vbar)^2
sum((v - vbar)^2)
sum((v - vbar)^2)/4
vdf$v
vdf$v - vbar
(vdf$v - vbar)^2
mean((vdf$v - vbar)^2)
View(galton)
View(galton)
data(galton)
long=melt(galton)
library(reshape2)
long=melt(galton)
View(long)
View(long)
View(long)
View(long)
View(long)
View(long)
galton$child
galton$child - mean(galton$child)
mean(galton$child - mean(galton$child))
round(mean(galton$child - mean(galton$child)), 2)
round(mean(galton$child - mean(galton$child)), 20)
round(mean(galton$child - mean(galton$child)), 10)
round(mean(galton$child - mean(galton$child)), 12)
round(mean(galton$child - mean(galton$child)), 14)
round(mean(galton$child - mean(galton$child)), 18)
round(mean(galton$child - mean(galton$child)), 17)
round(mean(galton$child - mean(galton$child)), 16)
round(mean(galton$child - mean(galton$child)), 15)
View(freqData)
View(freqData)
fd=freqData
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot()
myPlot
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE)) g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))    g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))    g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))    g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))    g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
myPlot <- function(beta){    g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))    g <- g + scale_size(range = c(2, 20), guide = "none" )    g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))    g <- g + geom_point(aes(colour=freq, size = freq))    g <- g + scale_colour_gradient(low = "lightblue", high="white")    g <- g + geom_abline(intercept = 0, slope = beta, size = 3)    mse <- mean( (y - beta * x) ^2 )    g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))    g}
ed
edit
myPlot <- function(beta){
}
myPlot <- function(beta){        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta){        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta){        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE)) g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g}
myPlot <- function(beta) {        g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))        g <- g + scale_size(range = c(2, 20), guide = "none" )        g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))        g <- g + geom_point(aes(colour=freq, size = freq))        g <- g + scale_colour_gradient(low = "lightblue", high="white")        g <- g + geom_abline(intercept = 0, slope = beta, size = 3)        mse <- mean( (y - beta * x) ^2 )        g}
myPlot <- function(beta){
g	<- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g	<- g + scale_size(range = c(2, 20), guide = "none" )
g	<- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g	<- g + geom_point(aes(colour=freq, size = freq))
g	<- g + scale_colour_gradient(low = "lightblue", high="white")
g	<- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse	<- mean( (y - beta * x) ^2 )
g	<- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
freqData
filter(freqData, freq > 0)
filter(freqData, freqData$freq > 0)
a=filter(freqData, freqData$freq > 0)
myPlot <- function(beta){
g	<- ggplot(filter(freqData, freqData$freq > 0), aes(x = parent, y = child))
g	<- g + scale_size(range = c(2, 20), guide = "none" )
g	<- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g	<- g + geom_point(aes(colour=freq, size = freq))
g	<- g + scale_colour_gradient(low = "lightblue", high="white")
g	<- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse	<- mean( (y - beta * x) ^2 )
g	<- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
library("dplyr", lib.loc="~/Library/R/3.1/library")
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
manipulate(myPlot(beta), beta = slider(0.6, 1.2, step = 0.02))
setwd("~/Documents/ MOOC/Coursera/Enrolled/36 Developing Data Products [07-09-2015 - 04-10-2015]/3 Project/project")
---
title       : Shiny
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(data.table)
library(dplyr)
library(ggplot2)
dt      <- data.table(mpg)
dt      <- dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans))) %>% select(manufacturer:hwy)
View(dt)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
x = "a" + "a"
x = "a" & "a"
x = "a" |"" "a"
x = paste0("a" , "a")
x
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dt
with(dt,expr = paste(model,displ))
with(dt,expr = paste0(model,displ))
with(dt,expr = paste0(model,displ))
dt
with(dt,expr = paste0(model,displ,cyl,trans,drv))
distinct(with(dt,expr = paste0(model,displ,cyl,trans,drv)))
(with(dt,expr = paste0(model,displ,cyl,trans,drv))
)
(with(dt,expr = paste0(model,displ,cyl,trans,drv)))
factor(with(dt,expr = paste0(model,displ,cyl,trans,drv)))
dt
factor(with(dt,expr = paste0(manufacturer,model,displ,cyl,trans,drv)))
factor(with(dt,expr = paste0(manufacturer,model,displ,cyl,trans,drv)))
dt
factor(with(dt,expr = paste0(manufacturer,model,displ,cyl,trans,drv)))
a = paste0(manufacturer,model,displ,cyl,trans,drv)))
a = paste0(manufacturer,model,displ,cyl,trans,drv))
a = paste0(manufacturer,model,displ,cyl,trans,drv)
dtx = mutate(dt, paste0(manufacturer,model,displ,cyl,trans,drv))
dtc
dtx
dtx
ggplot(dtx, aes(x=year,y=cty,group=grp))
dtx = mutate(dt, grp=paste0(manufacturer,model,displ,cyl,trans,drv))
grp
dtx
dtx
ggplot(dtx, aes(x=year,y=cty,group=grp))
ggplot(dtx, aes(x=year,y=cty,group=grp)) + geom_line()
ggplot(dtx, aes(x=year,y=cty,group=grp)) + geom_line() + geom_point()
ggplot(dtx, aes(x=year,y=hwy,group=grp)) + geom_line() + geom_point()
dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans)), grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy)
a=dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans)), grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy)
a
a=dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans))) %>% mutate(grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy)
a
dt
a=mpg %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans))) %>% mutate(grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy)
a
a=mpg %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans))) %>% mutate(grp=factor(paste0(manufacturer,model,displ,cyl,trans,drv)) ) %>% select(manufacturer:hwy)
a
a=mpg %>% mutate(grp=factor(paste0(manufacturer,model,displ,cyl,trans,drv)) ) %>% select(manufacturer:hwy)
a
dtx = mutate(dt, grp=paste0(manufacturer,model,displ,cyl,trans,drv))
dtx
dtx
dtx = mutate(dt, grp =  factor(paste0(manufacturer,model,displ,cyl,trans,drv)   )
)
dtx
dtx
dt
dt      <- data.table(mpg)
dt
a <- dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans)), grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy)
a
dt      <- data.table(mpg)
a <- dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans))) %>% mutate( grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy,grp)
a
dt      <- data.table(mpg)
a = dt %>% mutate( trans  = factor(gsub("(.*)\\(.*","\\1",trans)), grp=paste0(manufacturer,model,displ,cyl,trans,drv) ) %>% select(manufacturer:hwy,grp)
a
shiny::runApp()
ggplot(a, aes(x=year,y=hwy,group=grp)) + geom_line() + geom_point()
shiny::runApp()
shiny::runApp()
shiny::runApp()
